//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Taxi.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Taxi : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Taxi()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Taxi"",
    ""maps"": [
        {
            ""name"": ""TaxiIranyitas"",
            ""id"": ""c36c65ea-d00e-4faf-b7db-70a691db1fa3"",
            ""actions"": [
                {
                    ""name"": ""Iranyitas"",
                    ""type"": ""Button"",
                    ""id"": ""9fcd1aab-a7e4-45e3-bfa6-57fdc81ebd51"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fek"",
                    ""type"": ""Button"",
                    ""id"": ""295ce6b7-3c5f-4ee6-990f-a9cdd03986ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""97c89c4a-5cb6-4ece-9c3e-ddbef58c3356"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""JobbEsBal"",
                    ""id"": ""aa0dc48a-6697-4852-a951-61d886609756"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Iranyitas"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4fbdb3b4-7a73-4f16-8014-6b152ca2d9fd"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Iranyitas"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""d9c8dcbe-dee7-4626-ae04-cbfca63a004e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Iranyitas"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e937c3ac-a0ab-40ec-ac1f-fffcb180b4c9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fek"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dcbec4a8-8f8e-4efc-93a7-d93619b8f55f"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8fa0ece5-08e9-4e58-9033-1af817855386"",
                    ""path"": ""<DualShockGamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // TaxiIranyitas
        m_TaxiIranyitas = asset.FindActionMap("TaxiIranyitas", throwIfNotFound: true);
        m_TaxiIranyitas_Iranyitas = m_TaxiIranyitas.FindAction("Iranyitas", throwIfNotFound: true);
        m_TaxiIranyitas_Fek = m_TaxiIranyitas.FindAction("Fek", throwIfNotFound: true);
        m_TaxiIranyitas_Menu = m_TaxiIranyitas.FindAction("Menu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // TaxiIranyitas
    private readonly InputActionMap m_TaxiIranyitas;
    private ITaxiIranyitasActions m_TaxiIranyitasActionsCallbackInterface;
    private readonly InputAction m_TaxiIranyitas_Iranyitas;
    private readonly InputAction m_TaxiIranyitas_Fek;
    private readonly InputAction m_TaxiIranyitas_Menu;
    public struct TaxiIranyitasActions
    {
        private @Taxi m_Wrapper;
        public TaxiIranyitasActions(@Taxi wrapper) { m_Wrapper = wrapper; }
        public InputAction @Iranyitas => m_Wrapper.m_TaxiIranyitas_Iranyitas;
        public InputAction @Fek => m_Wrapper.m_TaxiIranyitas_Fek;
        public InputAction @Menu => m_Wrapper.m_TaxiIranyitas_Menu;
        public InputActionMap Get() { return m_Wrapper.m_TaxiIranyitas; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TaxiIranyitasActions set) { return set.Get(); }
        public void SetCallbacks(ITaxiIranyitasActions instance)
        {
            if (m_Wrapper.m_TaxiIranyitasActionsCallbackInterface != null)
            {
                @Iranyitas.started -= m_Wrapper.m_TaxiIranyitasActionsCallbackInterface.OnIranyitas;
                @Iranyitas.performed -= m_Wrapper.m_TaxiIranyitasActionsCallbackInterface.OnIranyitas;
                @Iranyitas.canceled -= m_Wrapper.m_TaxiIranyitasActionsCallbackInterface.OnIranyitas;
                @Fek.started -= m_Wrapper.m_TaxiIranyitasActionsCallbackInterface.OnFek;
                @Fek.performed -= m_Wrapper.m_TaxiIranyitasActionsCallbackInterface.OnFek;
                @Fek.canceled -= m_Wrapper.m_TaxiIranyitasActionsCallbackInterface.OnFek;
                @Menu.started -= m_Wrapper.m_TaxiIranyitasActionsCallbackInterface.OnMenu;
                @Menu.performed -= m_Wrapper.m_TaxiIranyitasActionsCallbackInterface.OnMenu;
                @Menu.canceled -= m_Wrapper.m_TaxiIranyitasActionsCallbackInterface.OnMenu;
            }
            m_Wrapper.m_TaxiIranyitasActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Iranyitas.started += instance.OnIranyitas;
                @Iranyitas.performed += instance.OnIranyitas;
                @Iranyitas.canceled += instance.OnIranyitas;
                @Fek.started += instance.OnFek;
                @Fek.performed += instance.OnFek;
                @Fek.canceled += instance.OnFek;
                @Menu.started += instance.OnMenu;
                @Menu.performed += instance.OnMenu;
                @Menu.canceled += instance.OnMenu;
            }
        }
    }
    public TaxiIranyitasActions @TaxiIranyitas => new TaxiIranyitasActions(this);
    public interface ITaxiIranyitasActions
    {
        void OnIranyitas(InputAction.CallbackContext context);
        void OnFek(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
    }
}
